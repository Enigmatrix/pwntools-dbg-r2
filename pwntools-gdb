#!/usr/bin/env python

# Adapted from https://gist.github.com/bannsec/43cf0f1b05ec37eb7e92a2922967bc46

import argparse
import re
import subprocess
import shlex
import os

r2_python_template = """#!/usr/bin/env python
import os, r2pipe
r2 = r2pipe.open()
def load_modules():
    modules = r2.cmdj("dmmj")
    for module in modules:
        if '{mod_name:s}' == os.path.basename(module['file']):
            command = "oba {{addr:d}} {{file_name:s}}".format(file_name=module['file'], addr=module['address'])
            r2.cmd(command)
load_modules()
r2.cmd('ib') # Reload the buffer info
{user_commands:s}
"""

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("-x", nargs=1)
    parser.add_argument("-q", action="store_true")
    parser.add_argument("file", nargs=1)
    args = parser.parse_args()

    file_name = args.file[0]

    gdb_script = args.x[0]

    with open(gdb_script, "r") as f:
        gdb_script = f.read()

    ip, port = re.findall("target remote (.+):([0-9]+)", gdb_script)[0]

    # Find the user commands that start with "#"
    user_commands = '\n'.join([line[1:] for line in gdb_script.split("\n") if line.startswith("#")])

    script_file = args.x[0] + ".py"
    with open(script_file,"w") as f:
        f.write(r2_python_template.format(mod_name=os.path.basename(file_name), user_commands=user_commands))

    # TODO
    # start r2 in another terminal, then run new-session, which does this: https://reverseengineering.stackexchange.com/questions/18342/is-there-a-way-to-explicitly-connect-r2pipe-to-an-existing-radare2-session-that
    # (read comments!). this script will connect to that. user might need to specify port n there
    command = ["screen","-t","pwntools-r2","r2","-d","-i",script_file, "gdb://{ip:s}:{port:s}".format(ip=ip, port=port)]

    subprocess.call(command)

if __name__ == '__main__':
    main()
